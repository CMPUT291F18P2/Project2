from bsddb3 import db
import filecreator
import indexing

''' Initializing Berkeley databases
    Creates databases for the index files generated by indexing.py
'''
def makeDatabase():
	# Create database for ads
	adsFile = "ad.idx"
	adsDatabase = db.DB()
	adsDatabase.set_flags(db.DB_DUP)
	adsDatabase.open(adsFile, None, db.DB_HASH, db.DB_CREATE)
	adsCurs = adsDatabase.cursor

	# Create database for terms
	termsFile = "te.idx"
	termsDatabase = db.DB()
	termsDatabase.set_flags(db.DB_DUP)
	termsDatabase.open(termsFile, None, db.DB_BTREE, db.DB_CREATE)
	termsCurs = termsDatabase.cursor

	# Create database for pdates
	pdatesFile = "da.idx"
	pdatesDatabase = db.DB()
	pdatesDatabase.set_flags(db.DB_DUP)
	pdatesDatabase.open(pdatesFile, None, db.DB_BTREE, db.DB_CREATE)
	pdatesCurs = pdatesDatabase.cursor

	# Create database for prices
	pricesFile = "pr.idx"
	adsDatabase = db.DB()
	adsDatabase.set_flags(db.DB_DUP)
	adsDatabase.open(pricesFile, None, db.DB_BTREE, db.DB_CREATE)
	adsCurs = adsDatabase.cursor

''' Preparing files for Berkeley DB usage
    From a record input, this function generates .txt files for ads, terms, pdates, and prices
    These .txt files are then indexed into .idx files
'''
def prepFile():
	filecreator.main()
	indexing.main()

def main():
	prepFile()
	makeDatabase()
	outputFormat = "full"

	print("Welcome to Kijiji\n")
	print('Type "help" for list of available commands\n')
	while(True):
		userInput = input("What would you like to do? ").lower()
		if (userInput == "help"):
			print("Enter query, change format, quit\n")

		elif (userInput == "enter query"):
			pass

		elif (userInput == "change format"):
			outputFormat = input("(full/brief): output=").lower()
			print("Format has been changed to %s\n" % outputFormat)

		elif (userInput == "quit"):
			break

if __name__ == "__main__":
	main()
